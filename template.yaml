apiVersion: backstage.io/v1beta2
kind: Template
metadata:
  name: create-react-app-template
  title: Chatbot Starter Kit
  description: Create a new CRA website project
  tags:
    - react
    - cra
spec:
  owner: web@example.com
  type: website
  parameters:
    - title: Provide some simple information
      required:
        - project_name
        - component_id
        - owner
      properties:
        project_name:
          title: Name
          type: string
          description: Unique name of the component
        component_id:
          title: Name
          type: string
          description: Unique name of the component
        description:
          title: Description
          type: string
          description: Help others understand what this website is for.
        owner:
          title: Owner
          type: string
          description: Owner of the component
          ui:field: OwnerPicker
          ui:options:
            allowedKinds:
              - Group
    - title: Choose a location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com
  steps:
    - id: template
      name: Fetch Skeleton + Template
      action: fetch:cookiecutter
      input:
        url: ./skeleton
        copyWithoutRender:
          - .github/workflows/*
        values:
          component_id: '{{ parameters.component_id }}'
          description: '{{ parameters.description }}'
          destination: '{{ parseRepoUrl parameters.repoUrl }}'
          owner: '{{ parameters.owner }}'
          full_name: "Audrey Roy Greenfeld",
          email: "audreyr@example.com",
          github_username: '{{ parameters.owner }}'
          project_name: "{{ parameters.project_name }}",
          project_slug: "{{ parameters.project_name }}",
          project_short_description: "Python Boilerplate contains all the boilerplate you need to create a Python package.",
          pypi_username": "{{ parameters.owner }}"
          version": "0.1.0"
          use_pytest: "n"
          use_pypi_deployment_with_travis: "y"
          add_pyup_badge: "n"
          command_line_interface: "No command-line interface"
          create_author_file": "y"
          open_source_license": "MIT license"

    - id: publish
      name: Publish
      action: publish:github
      input:
        allowedHosts: ['github.com']
        description: 'This is {{ parameters.component_id }}'
        repoUrl: '{{ parameters.repoUrl }}'

    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: '{{ steps.publish.output.repoContentsUrl }}'
        catalogInfoPath: '/catalog-info.yaml'

  output:
    remoteUrl: '{{ steps.publish.output.remoteUrl }}'
    entityRef: '{{ steps.register.output.entityRef }}'
